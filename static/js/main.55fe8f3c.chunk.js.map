{"version":3,"sources":["theme.js","components/modals/BookModal.js","util/hooks.js","features/books/booksSlice.js","components/forms/BookForm.js","components/forms/NewBookForm.js","components/books-display/BookGridActions.js","components/book-card/BookCardCover.js","components/forms/PagesForm.js","components/modals/AddPagesModal.js","components/book-card/menu/AddPagesItem.js","components/modals/SetPagesModal.js","components/book-card/menu/SetPagesItem.js","components/forms/RateBookForm.js","components/modals/RatingModal.js","components/book-card/menu/RatingItem.js","components/modals/DeleteBookDialog.js","components/book-card/menu/DeleteBookItem.js","components/book-card/menu/MarkAsCompletedItem.js","components/book-card/BookCardMenu.js","components/book-card/BookCardHeader.js","components/book-card/BookCardInfo.js","components/ui/RatingStars.js","components/book-card/BookCardFooter.js","components/book-card/BookCard.js","components/books-display/BookGrid.js","components/books-display/GridTabs.js","components/books-display/BooksDisplay.js","components/book-page/TableItem.js","components/forms/EditBookForm.js","components/book-page/BookPage.js","features/theme/colorSlice.js","components/ui/nav/ColorPopover.js","components/ui/nav/Navbar.js","App.js","reportWebVitals.js","serviceWorker.js","features/books/genresSlice.js","app/store.js","index.js"],"names":["theme","extendTheme","components","NewBookModal","props","isOpen","onClose","toggleIsOpen","header","children","useGetBook","id","useSelector","state","books","booksArray","find","book","useGetPercentageRead","pagesTotal","pagesRead","percentage","Math","trunc","useGetGenreArrayById","genres","genreState","genreArray","forEach","genre","push","booksSlice","createSlice","name","initialState","title","author","imageSrc","description","pages","rating","sortBy","sortByOrder","filter","reducers","addBook","action","payload","sort","editBook","i","arr","completeBook","requiredBook","addPagesRead","pagesToAdd","parseInt","setPagesRead","setRating","removeBook","changeSort","sortBooks","changeSortOrder","changeFilter","book1","book2","toLocaleLowerCase","reverse","actions","BookForm","useForm","register","handleSubmit","formState","isSubmitting","errors","getValues","onSubmit","isRequired","htmlFor","defaultValue","required","color","message","type","valueAsNumber","validate","positive","v","editMode","nonNegative","notBiggerThanPages","step","max","value","min","isMultiple","Number","isInteger","map","index","containsGenre","bookGenres","includes","defaultIsChecked","mr","key","mt","textAlign","isLoading","colorScheme","NewBookForm","dispatch","useDispatch","data","Object","values","image","newBook","BookGridActions","useState","modalIsOpen","setModalIsOpen","toggleModal","mainColor","filters","isLazy","closeOnSelect","as","Button","size","rightIcon","FaSort","variant","onChange","e","ml","FaFilter","onClick","placeSelf","FaPlus","BookModal","BookCover","scale","setScale","RouterLink","onFocus","onBlur","display","to","bookId","src","borderRadius","h","w","objectFit","transitionDuration","_hover","transform","alt","PagesModal","label","submitButton","AddPagesModal","preventDefault","target","AddPagesItem","useDisclosure","onToggle","icon","SetPagesModal","SetPagesItem","FaBookReader","RateBookForm","RateModal","RatingItem","FaStar","RatingModal","DeleteBookDialog","cancelRef","useRef","dialogIsOpen","leastDestructiveRef","toggleDialog","ref","DeleteBookItem","FaTrash","MarkAsCompletedItem","FaCheck","BookCardMenu","percentageRead","IconButton","setIconVisibilityTrue","setIconVisibilityFalse","_focus","outlineColor","outlineOffset","aria-label","cursor","FaEllipsisV","visibility","iconVisibility","BookCardHeader","borderBottomWidth","py","bg","BookCardCover","BookCardInfo","mx","my","FaBook","FaBookOpen","isTruncated","fontSize","RatingStars","stars","starsFilled","boxSize","starSize","FaStarHalf","BookCardFooter","align","placement","openDelay","hasArrow","shouldWrapChildren","hasStripe","BookCard","setIconVisibility","flexDir","borderWidth","pb","boxShadow","onMouseOver","onMouseLeave","footerType","BookGrid","autoFlow","templateColumns","gap","selectCompletedBooks","selectBooks","selectCurrentlyReadingBooks","length","some","GridTabs","allBooks","completedBooks","currentlyReadingBooks","useEffect","mb","overflowY","BooksDisplay","TableItem","alignItems","iconColor","letterSpacing","fontWeight","EditBookForm","editedBook","BookPage","useParams","px","shadow","direction","FaEdit","justify","FaUser","FaTheaterMasks","str","substr","stringifyGenres","colorSlice","changeColor","colors","ColorPopover","columns","p","borderColor","_active","Navbar","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","genresSlice","genre1","genre2","configureStore","reducer","booksReducer","colorReducer","genresReducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.55fe8f3c.chunk.js","sourcesContent":["import { extendTheme } from '@chakra-ui/react';\r\nconst theme = extendTheme({\r\n  components: {},\r\n});\r\nexport default theme;\r\n","import React from 'react';\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from '@chakra-ui/react';\r\n\r\nfunction NewBookModal(props) {\r\n  return (\r\n    <Modal isOpen={props.isOpen} onClose={props.toggleIsOpen}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>{props.header}</ModalHeader>\r\n        <ModalBody>{props.children}</ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default NewBookModal;\r\n","import { useSelector } from 'react-redux';\r\n\r\nfunction useGetBook(id) {\r\n  return useSelector(state =>\r\n    state.books.booksArray.find(book => book.id === id)\r\n  );\r\n}\r\n\r\nfunction useGetPercentageRead(pagesTotal, pagesRead) {\r\n  const percentage = (pagesRead / pagesTotal) * 100;\r\n  return Math.trunc(percentage);\r\n}\r\n\r\nfunction useGetGenreArrayById(id) {\r\n  const { genres } = useGetBook(id);\r\n  const genreState = useSelector(state => state.genres.genreArray);\r\n\r\n  const genreArray = [];\r\n  genres.forEach(genre => {\r\n    genreArray.push(genreState[genre]);\r\n  });\r\n\r\n  return genreArray;\r\n}\r\n\r\nexport { useGetBook, useGetPercentageRead, useGetGenreArrayById };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { useGetPercentageRead } from '../../util/hooks';\r\n\r\nexport const booksSlice = createSlice({\r\n  name: 'books',\r\n  initialState: {\r\n    booksArray: [\r\n      {\r\n        id: '0',\r\n        title: 'Sapiens: A Brief History of Humankind',\r\n        author: 'Yuval Noah Harari',\r\n        imageSrc: 'https://m.media-amazon.com/images/I/51Sn8PEXwcL.jpg',\r\n        description:\r\n          'From a renowned historian comes a groundbreaking narrative of humanity\\'s creation and evolution - a number one international best seller - that explores the ways in which biology and history have defined us and enhanced our understanding of what it means to be \"human\".',\r\n        genres: [7, 10],\r\n        pages: 441,\r\n        pagesRead: 441,\r\n        rating: 5,\r\n      },\r\n      {\r\n        id: '1',\r\n        title: 'Fences',\r\n        author: 'August Wilson',\r\n        imageSrc:\r\n          'https://images-na.ssl-images-amazon.com/images/I/51hA9YNKqAL._SY291_BO1,204,203,200_QL40_FMwebp_.jpg',\r\n        description:\r\n          'Troy Maxson is a strong man, a hard man. He has had to be to survive. Troy Maxson has gone through life in an America where to be proud and black is to face pressures that could crush a man, body and soul. But the 1950s are yielding to the new spirit of liberation in the 1960s, a spirit that is changing the world Troy Maxson has learned to deal with the only way he can, a spirit that is making him a stranger, angry and afraid, in a world he never knew and to a wife and son he understands less and less. This is a modern classic, a book that deals with the impossibly difficult themes of race in America, set during the Civil Rights Movement of the 1950s and 60s.',\r\n        genres: [7],\r\n        pages: 229,\r\n        pagesRead: 109,\r\n        rating: 0,\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'The Road',\r\n        author: 'Cormac McCarthy',\r\n        imageSrc:\r\n          'https://images-na.ssl-images-amazon.com/images/I/41DOUWI2haL._SX323_BO1,204,203,200_.jpg',\r\n        description:\r\n          \"A father and his son walk alone through burned America. Nothing moves in the ravaged landscape save the ash on the wind. It is cold enough to crack stones, and when the snow falls it is gray. The sky is dark. Their destination is the coast, although they don't know what, if anything, awaits them there. They have nothing; just a pistol to defend themselves against the lawless bands that stalk the road, the clothes they are wearing, a cart of scavenged food—and each other.\",\r\n        genres: [7],\r\n        pages: 209,\r\n        pagesRead: 10,\r\n        rating: 1.5,\r\n      },\r\n      {\r\n        id: '3',\r\n        title: 'Recursion',\r\n        author: 'Blake Crouch',\r\n        imageSrc: 'https://m.media-amazon.com/images/I/51HsFY3rRBL._SY346_.jpg',\r\n        description:\r\n          'Reality is broken.\\nAt first, it looks like a disease. An epidemic that spreads through no known means, driving its victims mad with memories of a life they never lived. But the force that’s sweeping the world is no pathogen. It’s just the first shock wave, unleashed by a stunning discovery—and what’s in jeopardy is not our minds but the very fabric of time itself.\\n\\nIn New York City, Detective Barry Sutton is closing in on the truth—and in a remote laboratory, neuroscientist Helena Smith is unaware that she alone holds the key to this mystery . . . and the tools for fighting back.\\nTogether, Barry and Helena will have to confront their enemy—before they, and the world, are trapped in a loop of ever-growing chaos.',\r\n        genres: [12, 16, 20],\r\n        pages: 305,\r\n        pagesRead: 277,\r\n        rating: 2.5,\r\n      },\r\n      {\r\n        id: '4',\r\n        title: 'The Little Prince',\r\n        author: 'Antoine de Saint-Exupery',\r\n        imageSrc:\r\n          'https://images-na.ssl-images-amazon.com/images/I/41MkVPBdOOL._SX317_BO1,204,203,200_.jpg',\r\n        description:\r\n          \"The Little Prince is a classic tale of equal appeal to children and adults. On one level it is the story of an airman's discovery, in the desert, of a small boy from another planet - the Little Prince of the title - and his stories of intergalactic travel, while on the other hand it is a thought-provoking allegory of the human condition.\",\r\n        genres: [0, 3, 4],\r\n        pages: 100,\r\n        pagesRead: 0,\r\n        rating: 4,\r\n      },\r\n      {\r\n        id: '5',\r\n        title: '1984',\r\n        author: 'George Orwell',\r\n        imageSrc:\r\n          'https://images-na.ssl-images-amazon.com/images/I/41aM4xOZxaL._SX277_BO1,204,203,200_.jpg',\r\n        genres: [4, 8],\r\n        pages: 181,\r\n        pagesRead: 100,\r\n        rating: 3.5,\r\n      },\r\n    ],\r\n    sortBy: 'title',\r\n    sortByOrder: 'ascending',\r\n    filter: [],\r\n  },\r\n  reducers: {\r\n    addBook: (state, action) => {\r\n      state.booksArray.push(action.payload);\r\n      sort(state);\r\n    },\r\n    editBook: (state, action) => {\r\n      state.booksArray.forEach((book, i, arr) => {\r\n        if (book.id === action.payload.id) {\r\n          arr[i] = action.payload;\r\n        }\r\n      });\r\n    },\r\n    completeBook: (state, action) => {\r\n      const requiredBook = state.booksArray.find(\r\n        book => book.id === action.payload\r\n      );\r\n      requiredBook.pagesRead = requiredBook.pages;\r\n\r\n      if (state.sortBy === 'progress') sort(state);\r\n    },\r\n    addPagesRead: (state, action) => {\r\n      const pagesToAdd = parseInt(action.payload.pagesToAdd, 10);\r\n\r\n      const requiredBook = state.booksArray.find(\r\n        book => book.id === action.payload.id\r\n      );\r\n\r\n      if (pagesToAdd + requiredBook.pagesRead > requiredBook.pages)\r\n        requiredBook.pagesRead = requiredBook.pages;\r\n      else requiredBook.pagesRead += pagesToAdd;\r\n\r\n      if (state.sortBy === 'progress') sort(state);\r\n    },\r\n    setPagesRead: (state, action) => {\r\n      const pagesRead = parseInt(action.payload.pagesRead, 10);\r\n      if (pagesRead < 0) return;\r\n\r\n      const requiredBook = state.booksArray.find(\r\n        book => book.id === action.payload.id\r\n      );\r\n\r\n      if (pagesRead > requiredBook.pages)\r\n        requiredBook.pagesRead = requiredBook.pages;\r\n      else requiredBook.pagesRead = pagesRead;\r\n\r\n      if (state.sortBy === 'progress') sort(state);\r\n    },\r\n    setRating: (state, action) => {\r\n      const requiredBook = state.booksArray.find(\r\n        book => book.id === action.payload.id\r\n      );\r\n      requiredBook.rating = action.payload.rating;\r\n\r\n      if (state.sortBy === 'rating') sort(state);\r\n    },\r\n    removeBook: (state, action) => {\r\n      state.booksArray = state.booksArray.filter(\r\n        book => book.id !== action.payload\r\n      );\r\n    },\r\n    changeSort: (state, action) => {\r\n      state.sortBy = action.payload;\r\n    },\r\n    sortBooks: state => {\r\n      sort(state);\r\n    },\r\n    changeSortOrder: (state, action) => {\r\n      state.sortByOrder = action.payload;\r\n    },\r\n    changeFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nfunction sort(state) {\r\n  const sortBy = state.sortBy;\r\n  if (sortBy === 'title') {\r\n    state.booksArray.sort((book1, book2) => {\r\n      return book1.title.toLocaleLowerCase() < book2.title.toLocaleLowerCase()\r\n        ? 1\r\n        : -1;\r\n    });\r\n    if (state.sortByOrder === 'ascending') state.booksArray.reverse();\r\n  } else if (sortBy === 'rating') {\r\n    state.booksArray.sort((book1, book2) => {\r\n      return book1.rating > book2.rating ? -1 : 1;\r\n    });\r\n    if (state.sortByOrder === 'ascending') state.booksArray.reverse();\r\n  } else if (sortBy === 'progress') {\r\n    state.booksArray.sort((book1, book2) => {\r\n      return useGetPercentageRead(book1.pages, book1.pagesRead) >\r\n        useGetPercentageRead(book2.pages, book2.pagesRead)\r\n        ? -1\r\n        : 1;\r\n    });\r\n    if (state.sortByOrder === 'ascending') state.booksArray.reverse();\r\n  }\r\n}\r\n\r\nexport const {\r\n  addBook,\r\n  editBook,\r\n  completeBook,\r\n  addPagesRead,\r\n  setPagesRead,\r\n  setRating,\r\n  removeBook,\r\n  changeSort,\r\n  changeSortOrder,\r\n  sortBooks,\r\n  changeFilter,\r\n} = booksSlice.actions;\r\n\r\nexport default booksSlice.reducer;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Button,\r\n  Checkbox,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction BookForm(props) {\r\n  const genreState = useSelector(state => state.genres.genreArray);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors },\r\n    getValues,\r\n  } = useForm();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(props.onSubmit)}>\r\n      <FormControl isRequired>\r\n        <FormLabel htmlFor=\"title\">Title</FormLabel>\r\n        <Input\r\n          defaultValue={props.book?.title}\r\n          id=\"title\"\r\n          name=\"title\"\r\n          {...register('title', { required: 'This is required' })}\r\n        />\r\n        <Text color=\"red.500\">{errors.name && errors.name.message}</Text>\r\n      </FormControl>\r\n      <FormControl isRequired>\r\n        <FormLabel htmlFor=\"author\">Author</FormLabel>\r\n        <Input\r\n          id=\"author\"\r\n          defaultValue={props.book?.author}\r\n          {...register('author', { required: 'This is required' })}\r\n        />\r\n        <Text color=\"red.500\">{errors.author && errors.author.message}</Text>\r\n      </FormControl>\r\n      <FormControl isRequired>\r\n        <FormLabel htmlFor=\"pages\">Number of pages</FormLabel>\r\n        <Input\r\n          id=\"pages\"\r\n          name=\"pages\"\r\n          type=\"number\"\r\n          defaultValue={props.book?.pages}\r\n          {...register('pages', {\r\n            required: 'This is required',\r\n            valueAsNumber: true,\r\n            validate: {\r\n              positive: v =>\r\n                parseInt(v, 10) > 0 || 'Number of pages should be positive',\r\n            },\r\n          })}\r\n        />\r\n        <Text color=\"red.500\">{errors.pages && errors.pages.message}</Text>\r\n      </FormControl>\r\n      {props.editMode ? (\r\n        <>\r\n          <FormControl>\r\n            <FormLabel htmlFor=\"pagesRead\">Number of pages read</FormLabel>\r\n            <Input\r\n              id=\"pagesRead\"\r\n              name=\"pagesRead\"\r\n              type=\"number\"\r\n              defaultValue={props.book?.pagesRead}\r\n              {...register('pagesRead', {\r\n                valueAsNumber: true,\r\n                validate: {\r\n                  nonNegative: v =>\r\n                    parseInt(v, 10) >= 0 ||\r\n                    \"Number of pages read shouldn't be negative\",\r\n                  notBiggerThanPages: v =>\r\n                    v <= getValues().pages ||\r\n                    \"Number of pages read shouldn't be bigger than number of pages\",\r\n                },\r\n              })}\r\n            />\r\n            <Text color=\"red.500\">\r\n              {errors.pagesRead && errors.pagesRead.message}\r\n            </Text>\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormLabel htmlFor=\"rating\">Rating</FormLabel>\r\n            <Input\r\n              id=\"rating\"\r\n              name=\"rating\"\r\n              type=\"number\"\r\n              step=\"any\"\r\n              /*step=\"0.5\"\r\n              min=\"0\"\r\n              max=\"5\"*/\r\n              defaultValue={props.book?.rating}\r\n              {...register('rating', {\r\n                valueAsNumber: true,\r\n                max: { value: 5, message: 'Ratings can only go up to 5' },\r\n                min: {\r\n                  value: 0,\r\n                  message: \"Ratings shouldn't be negative\",\r\n                },\r\n                validate: {\r\n                  isMultiple: v =>\r\n                    Number.isInteger(v / 0.5) ||\r\n                    'The rating should be a multiple of 0.5',\r\n                },\r\n              })}\r\n            />\r\n            <Text color=\"red.500\">\r\n              {errors.rating && errors.rating.message}\r\n            </Text>\r\n          </FormControl>{' '}\r\n        </>\r\n      ) : (\r\n        true\r\n      )}\r\n      <FormControl>\r\n        <FormLabel htmlFor=\"genres\">Genres</FormLabel>\r\n        <Box id=\"genres\">\r\n          {genreState.map((genre, index) => {\r\n            const containsGenre = props.bookGenres?.includes(genre);\r\n            return (\r\n              <Checkbox\r\n                defaultIsChecked={containsGenre}\r\n                mr=\"3\"\r\n                value={index}\r\n                key={genre}\r\n                {...register('genreArray.' + genre)}\r\n              >\r\n                {genre}\r\n              </Checkbox>\r\n            );\r\n          })}\r\n        </Box>\r\n      </FormControl>\r\n      <FormControl>\r\n        <FormLabel htmlFor=\"image\">Image URL</FormLabel>\r\n        <Input\r\n          id=\"image\"\r\n          type=\"url\"\r\n          defaultValue={props.book?.imageSrc}\r\n          {...register('image')}\r\n        />\r\n      </FormControl>\r\n      <Box mt=\"2\" textAlign=\"right\">\r\n        <Button isLoading={isSubmitting} type=\"submit\" colorScheme=\"green\">\r\n          Submit\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default BookForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addBook } from '../../features/books/booksSlice';\r\nimport BookForm from './BookForm';\r\n\r\nfunction NewBookForm(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  function onSubmit(data) {\r\n    data.genreArray = Object.values(data.genreArray);\r\n    data.genreArray = data.genreArray.filter(genre => {\r\n      return genre !== false;\r\n    });\r\n\r\n    if (data.image === '')\r\n      data.image =\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbJk-qCpmshndFRatcLSOB8GsyboaySnGpeS2GvkZsQShaZpccKqkkK4MkBRGbIVOBnzw&usqp=CAU';\r\n\r\n    const newBook = {\r\n      id: data.title,\r\n      title: data.title,\r\n      author: data.author,\r\n      imageSrc: data.image,\r\n      genres: data.genreArray,\r\n      pages: data.pages,\r\n      pagesRead: 0,\r\n      rating: 0,\r\n    };\r\n\r\n    dispatch(addBook(newBook));\r\n\r\n    props.toggleIsOpen();\r\n  }\r\n\r\n  return <BookForm onSubmit={onSubmit} />;\r\n}\r\n\r\nexport default NewBookForm;\r\n","import React from 'react';\r\nimport {\r\n  Flex,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  Icon,\r\n  MenuList,\r\n  MenuOptionGroup,\r\n  MenuItemOption,\r\n  MenuDivider,\r\n} from '@chakra-ui/react';\r\nimport { useState } from 'react';\r\nimport BookModal from '../modals/BookModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFilter,\r\n  changeSort,\r\n  changeSortOrder,\r\n} from '../../features/books/booksSlice';\r\nimport NewBookForm from '../forms/NewBookForm';\r\nimport { FaFilter, FaPlus, FaSort } from 'react-icons/fa';\r\n\r\nfunction BookGridActions() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  function toggleModal() {\r\n    setModalIsOpen(!modalIsOpen);\r\n  }\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n  const genreArray = useSelector(state => state.genres.genreArray);\r\n  const sortBy = useSelector(state => state.books.sortBy);\r\n  const sortByOrder = useSelector(state => state.books.sortByOrder);\r\n  const filters = useSelector(state => state.books.filter);\r\n\r\n  return (\r\n    <Flex mt=\"4\">\r\n      <Menu isLazy closeOnSelect={false}>\r\n        <MenuButton\r\n          as={Button}\r\n          colorScheme={mainColor}\r\n          size=\"sm\"\r\n          rightIcon={<Icon as={FaSort} />}\r\n          variant=\"outline\"\r\n        >\r\n          Sort\r\n        </MenuButton>\r\n        <MenuList>\r\n          <MenuOptionGroup\r\n            title=\"Sort by\"\r\n            defaultValue={sortBy}\r\n            type=\"radio\"\r\n            onChange={e => dispatch(changeSort(e))}\r\n          >\r\n            <MenuItemOption value=\"title\">Title</MenuItemOption>\r\n            <MenuItemOption value=\"rating\">Rating</MenuItemOption>\r\n            <MenuItemOption value=\"progress\">Progress</MenuItemOption>\r\n          </MenuOptionGroup>\r\n          <MenuDivider />\r\n          <MenuOptionGroup\r\n            title=\"Order\"\r\n            defaultValue={sortByOrder}\r\n            type=\"radio\"\r\n            onChange={e => dispatch(changeSortOrder(e))}\r\n          >\r\n            <MenuItemOption value=\"ascending\">Ascending</MenuItemOption>\r\n            <MenuItemOption value=\"descending\">Descending</MenuItemOption>\r\n          </MenuOptionGroup>\r\n        </MenuList>\r\n      </Menu>\r\n      <Menu isLazy closeOnSelect={false}>\r\n        <MenuButton\r\n          ml=\"2\"\r\n          as={Button}\r\n          colorScheme={mainColor}\r\n          size=\"sm\"\r\n          rightIcon={<Icon as={FaFilter} />}\r\n          variant=\"outline\"\r\n        >\r\n          Filter\r\n        </MenuButton>\r\n        <MenuList>\r\n          <MenuOptionGroup\r\n            onChange={e => dispatch(changeFilter(e))}\r\n            title=\"Genre\"\r\n            type=\"checkbox\"\r\n            value={filters}\r\n          >\r\n            {genreArray.map(genre => {\r\n              return (\r\n                <MenuItemOption type=\"checkbox\" key={genre} value={genre}>\r\n                  {genre}\r\n                </MenuItemOption>\r\n              );\r\n            })}\r\n          </MenuOptionGroup>\r\n        </MenuList>\r\n      </Menu>\r\n      <Button\r\n        onClick={toggleModal}\r\n        placeSelf=\"flex-end\"\r\n        size=\"sm\"\r\n        colorScheme={mainColor}\r\n        ml=\"auto\"\r\n        rightIcon={<Icon as={FaPlus} />}\r\n        variant=\"outline\"\r\n      >\r\n        New\r\n      </Button>\r\n      <BookModal\r\n        header=\"Add new book\"\r\n        toggleIsOpen={toggleModal}\r\n        isOpen={modalIsOpen}\r\n      >\r\n        <NewBookForm toggleIsOpen={toggleModal} />\r\n      </BookModal>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default BookGridActions;\r\n","import React, { useState } from 'react';\r\nimport { Image, Link } from '@chakra-ui/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nfunction BookCover(props) {\r\n  const [scale, setScale] = useState(1);\r\n\r\n  return (\r\n    <Link\r\n      as={RouterLink}\r\n      onFocus={() => {\r\n        setScale(props.scale);\r\n      }}\r\n      onBlur={() => {\r\n        setScale(1);\r\n      }}\r\n      display=\"inline-block\"\r\n      to={'books/' + props.bookId}\r\n    >\r\n      <Image\r\n        src={props.imageSrc}\r\n        borderRadius=\"md\"\r\n        h=\"48\"\r\n        w=\"36\"\r\n        objectFit=\"fill\"\r\n        mt=\"-7\"\r\n        transitionDuration=\"0.3s\"\r\n        _hover={{ transform: 'scale(' + props.scale + ')' }}\r\n        transform={'scale(' + scale + ')'}\r\n        alt=\"book cover\"\r\n      />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default BookCover;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  FormHelperText,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { useGetBook } from '../../util/hooks';\r\n\r\nfunction PagesModal(props) {\r\n  const { pages, pagesRead } = useGetBook(props.bookId);\r\n\r\n  return (\r\n    <Modal isOpen={props.isOpen} onClose={props.toggleIsOpen}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>{props.header}</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={props.onSubmit}>\r\n            <FormControl min=\"0\" max={pages - pagesRead}>\r\n              <FormLabel>{props.label}</FormLabel>\r\n              <NumberInput>\r\n                <NumberInputField />\r\n                <FormHelperText>\r\n                  Currently, you have read {pagesRead} out of {pages} pages.\r\n                </FormHelperText>\r\n              </NumberInput>\r\n              <Box textAlign=\"right\">\r\n                <Button mt=\"2\" ml=\"auto\" colorScheme=\"green\">\r\n                  {props.submitButton}\r\n                </Button>\r\n              </Box>\r\n            </FormControl>\r\n          </form>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PagesModal;\r\n","import React from 'react';\r\nimport PagesModal from '../forms/PagesForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPagesRead } from '../../features/books/booksSlice';\r\n\r\nfunction AddPagesModal(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  function addPages(e) {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      addPagesRead({\r\n        id: props.bookId,\r\n        pagesToAdd: e.target.children[0].children[1].children[0].value,\r\n      })\r\n    );\r\n\r\n    props.toggleIsOpen();\r\n  }\r\n\r\n  return (\r\n    <PagesModal\r\n      header=\"Add pages read\"\r\n      label=\"Number of pages to add\"\r\n      submitButton=\"Add pages\"\r\n      onSubmit={addPages}\r\n      bookId={props.bookId}\r\n      isOpen={props.isOpen}\r\n      toggleIsOpen={props.toggleIsOpen}\r\n    />\r\n  );\r\n}\r\n/**<Modal isOpen={props.isOpen} onClose={props.toggleIsOpen}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Add pages read</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={addPages}>\r\n            <FormControl min=\"0\" max={props.book.pages - props.book.pagesRead}>\r\n              <FormLabel>Number of pages to add</FormLabel>\r\n              <NumberInput>\r\n                <NumberInputField />\r\n                <FormHelperText>\r\n                  Currently, you have read {props.book.pagesRead} out of{' '}\r\n                  {props.book.pages} pages.\r\n                </FormHelperText>\r\n              </NumberInput>\r\n              <Box textAlign=\"right\">\r\n                <Button mt=\"2\" ml=\"auto\" colorScheme=\"green\">\r\n                  Add pages\r\n                </Button>\r\n              </Box>\r\n            </FormControl>\r\n          </form>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal> */\r\nexport default AddPagesModal;\r\n","import React from 'react';\r\nimport { useDisclosure, MenuItem, Box, Icon } from '@chakra-ui/react';\r\nimport AddPagesModal from '../../modals/AddPagesModal';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nfunction AddPagesItem(props) {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Box>\r\n      <MenuItem onClick={onToggle} icon={<Icon as={FaPlus} />}>\r\n        Add pages read\r\n      </MenuItem>\r\n      <AddPagesModal\r\n        toggleIsOpen={onToggle}\r\n        isOpen={isOpen}\r\n        bookId={props.bookId}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AddPagesItem;\r\n","import React from 'react';\r\nimport PagesModal from '../forms/PagesForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPagesRead } from '../../features/books/booksSlice';\r\n\r\nfunction SetPagesModal(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  function setPages(e) {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      setPagesRead({\r\n        id: props.bookId,\r\n        pagesRead: e.target.children[0].children[1].children[0].value,\r\n      })\r\n    );\r\n\r\n    props.toggleIsOpen();\r\n  }\r\n\r\n  return (\r\n    <PagesModal\r\n      header=\"Set pages read\"\r\n      label=\"New number of pages read\"\r\n      submitButton=\"Set\"\r\n      onSubmit={setPages}\r\n      bookId={props.bookId}\r\n      isOpen={props.isOpen}\r\n      toggleIsOpen={props.toggleIsOpen}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SetPagesModal;\r\n","import React from 'react';\r\nimport { useDisclosure, MenuItem, Box, Icon } from '@chakra-ui/react';\r\nimport SetPagesModal from '../../modals/SetPagesModal';\r\nimport { FaBookReader } from 'react-icons/fa';\r\n\r\nfunction SetPagesItem(props) {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Box>\r\n      <MenuItem onClick={onToggle} icon={<Icon as={FaBookReader} />}>\r\n        Set pages read\r\n      </MenuItem>\r\n      <SetPagesModal\r\n        toggleIsOpen={onToggle}\r\n        isOpen={isOpen}\r\n        bookId={props.bookId}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SetPagesItem;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Input,\r\n  FormHelperText,\r\n  Button,\r\n  Text,\r\n  FormControl,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRating } from '../../features/books/booksSlice';\r\n\r\nfunction RateBookForm(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  function onSubmit(data) {\r\n    dispatch(setRating({ id: props.bookId, rating: data.rating }));\r\n\r\n    props.toggleIsOpen();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <FormControl>\r\n        <Input\r\n          {...register('rating', {\r\n            valueAsNumber: true,\r\n            max: { value: 5, message: 'Ratings can only go up to 5' },\r\n            min: {\r\n              value: 0,\r\n              message: \"Ratings shouldn't be negative\",\r\n            },\r\n            validate: {\r\n              isMultiple: v =>\r\n                Number.isInteger(v / 0.5) ||\r\n                'The rating should be a multiple of 0.5',\r\n            },\r\n          })}\r\n        />\r\n        <Text color=\"red.500\">{errors.rating && errors.rating.message}</Text>\r\n        <FormHelperText>\r\n          If you give 0 stars, the book will be considered unrated.\r\n        </FormHelperText>\r\n        <Box textAlign=\"right\" mt=\"2\">\r\n          <Button colorScheme=\"green\">Rate</Button>\r\n        </Box>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RateBookForm;\r\n","import React from 'react';\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from '@chakra-ui/react';\r\nimport RateBookForm from '../forms/RateBookForm';\r\n\r\nfunction RateModal(props) {\r\n  return (\r\n    <Modal isOpen={props.isOpen} onClose={props.toggleIsOpen}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Rate this book</ModalHeader>\r\n        <ModalBody>\r\n          <RateBookForm\r\n            setRating={props.setRating}\r\n            bookId={props.bookId}\r\n            toggleIsOpen={props.toggleIsOpen}\r\n          />\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default RateModal;\r\n","import React from 'react';\r\nimport { useDisclosure, MenuItem, Box, Icon } from '@chakra-ui/react';\r\nimport RatingModal from '../../modals/RatingModal';\r\nimport { FaStar } from 'react-icons/fa';\r\n\r\nfunction RatingItem(props) {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Box>\r\n      <MenuItem onClick={onToggle} icon={<Icon as={FaStar} />}>\r\n        Rate\r\n      </MenuItem>\r\n      <RatingModal\r\n        toggleIsOpen={onToggle}\r\n        isOpen={isOpen}\r\n        bookId={props.bookId}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RatingItem;\r\n","import React from 'react';\r\nimport { useRef } from 'react';\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogOverlay,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  Button,\r\n} from '@chakra-ui/react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeBook } from '../../features/books/booksSlice';\r\n\r\nfunction DeleteBookDialog(props) {\r\n  const dispatch = useDispatch();\r\n  const cancelRef = useRef();\r\n\r\n  function callRemoveBook() {\r\n    dispatch(removeBook(props.bookId));\r\n    props.toggleDialog();\r\n  }\r\n\r\n  return (\r\n    <AlertDialog\r\n      isOpen={props.dialogIsOpen}\r\n      leastDestructiveRef={cancelRef}\r\n      onClose={props.toggleDialog}\r\n    >\r\n      <AlertDialogOverlay>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>Delete book</AlertDialogHeader>\r\n          <AlertDialogBody>\r\n            Are you sure? This action cannot be undone.\r\n          </AlertDialogBody>\r\n          <AlertDialogFooter>\r\n            <Button ref={cancelRef} onClick={props.toggleDialog}>\r\n              Cancel\r\n            </Button>\r\n            <Button colorScheme=\"red\" ml=\"3\" onClick={callRemoveBook}>\r\n              Delete\r\n            </Button>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialogOverlay>\r\n    </AlertDialog>\r\n  );\r\n}\r\n\r\nexport default DeleteBookDialog;\r\n","import React from 'react';\r\nimport { useDisclosure, MenuItem, Box, Icon } from '@chakra-ui/react';\r\nimport DeleteBookDialog from '../../modals/DeleteBookDialog';\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nfunction DeleteBookItem(props) {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Box>\r\n      <MenuItem onClick={onToggle} icon={<Icon as={FaTrash} />}>\r\n        Delete book\r\n      </MenuItem>\r\n      <DeleteBookDialog\r\n        toggleDialog={onToggle}\r\n        dialogIsOpen={isOpen}\r\n        bookId={props.bookId}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DeleteBookItem;\r\n","import React from 'react';\r\nimport { MenuItem, Icon } from '@chakra-ui/react';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { completeBook } from '../../../features/books/booksSlice';\r\n\r\nfunction MarkAsCompletedItem(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <MenuItem\r\n      onClick={() => {\r\n        dispatch(completeBook(props.bookId));\r\n      }}\r\n      icon={<Icon as={FaCheck} />}\r\n    >\r\n      Mark as completed\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nexport default MarkAsCompletedItem;\r\n","import React from 'react';\r\n\r\nimport { FaEllipsisV } from 'react-icons/fa';\r\n\r\nimport { Icon, Menu, MenuButton, IconButton, MenuList } from '@chakra-ui/react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddPagesItem from './menu/AddPagesItem';\r\nimport SetPagesItem from './menu/SetPagesItem';\r\nimport RatingItem from './menu/RatingItem';\r\nimport DeleteBookItem from './menu/DeleteBookItem';\r\nimport MarkAsCompletedItem from './menu/MarkAsCompletedItem';\r\nimport { useGetPercentageRead } from '../../util/hooks';\r\n\r\nfunction BookCardMenu(props) {\r\n  const { pages, pagesRead } = useSelector(state => {\r\n    return state.books.booksArray.find(book => book.id === props.bookId);\r\n  });\r\n\r\n  const percentageRead = useGetPercentageRead(pages, pagesRead);\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuButton\r\n        as={IconButton}\r\n        variant=\"none\"\r\n        onFocus={props.setIconVisibilityTrue}\r\n        onBlur={props.setIconVisibilityFalse}\r\n        _focus={{ outlineColor: 'blue.200' }}\r\n        outlineOffset=\"-4px\"\r\n        w=\"2\"\r\n        aria-label=\"book actions\"\r\n        icon={\r\n          <Icon\r\n            _hover={{ cursor: 'pointer' }}\r\n            as={FaEllipsisV}\r\n            visibility={props.iconVisibility}\r\n            color={props.color + '.700'}\r\n          />\r\n        }\r\n      />\r\n      <MenuList>\r\n        {percentageRead === 100 ? true : <AddPagesItem bookId={props.bookId} />}\r\n        <SetPagesItem bookId={props.bookId} />\r\n        {percentageRead === 100 ? (\r\n          true\r\n        ) : (\r\n          <MarkAsCompletedItem bookId={props.bookId} />\r\n        )}\r\n        {percentageRead === 100 ? <RatingItem bookId={props.bookId} /> : true}\r\n        <DeleteBookItem bookId={props.bookId} />\r\n      </MenuList>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default BookCardMenu;\r\n","import React from 'react';\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nimport BookCardCover from './BookCardCover';\r\n\r\nimport BookCardMenu from './BookCardMenu';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetBook } from '../../util/hooks';\r\n\r\nfunction BookCardHeader(props) {\r\n  const { imageSrc } = useGetBook(props.bookId);\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  return (\r\n    <Box borderBottomWidth=\"1px\" py=\"1\" bg={mainColor + '.50'}>\r\n      <Box textAlign=\"right\">\r\n        <BookCardMenu\r\n          setIconVisibilityTrue={props.setIconVisibilityTrue}\r\n          setIconVisibilityFalse={props.setIconVisibilityFalse}\r\n          iconVisibility={props.iconVisibility}\r\n          bookId={props.bookId}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\">\r\n        <BookCardCover bookId={props.bookId} imageSrc={imageSrc} scale={1.05} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BookCardHeader;\r\n","import React from 'react';\r\nimport { Box, HStack, Icon, Text, Tag, TagLabel } from '@chakra-ui/react';\r\n\r\nimport { FaBookOpen, FaBook } from 'react-icons/fa';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  useGetBook,\r\n  useGetGenreArrayById,\r\n  useGetPercentageRead,\r\n} from '../../util/hooks';\r\n\r\nfunction BookCardInfo(props) {\r\n  const { title, author, pages, pagesRead } = useGetBook(props.bookId);\r\n  const percentageRead = useGetPercentageRead(pages, pagesRead);\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  const genreArray = useGetGenreArrayById(props.bookId);\r\n\r\n  return (\r\n    <Box mx=\"2\" mt=\"2\">\r\n      <HStack my=\"-1\">\r\n        <Icon\r\n          as={percentageRead === 100 ? FaBook : FaBookOpen}\r\n          color={mainColor + '.700'}\r\n        />\r\n        <Text isTruncated>{title}</Text>\r\n      </HStack>\r\n      <Text as=\"i\" fontSize=\"11\">\r\n        by {author}\r\n      </Text>\r\n      <HStack mt=\"1\">\r\n        {genreArray.map((genre, i) => {\r\n          if (i > 3) return true;\r\n          return (\r\n            <Tag size=\"sm\" colorScheme={mainColor} key={i}>\r\n              <TagLabel>{genre}</TagLabel>\r\n            </Tag>\r\n          );\r\n        })}\r\n      </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BookCardInfo;\r\n","import { FaStarHalf } from 'react-icons/fa';\r\nimport { Icon } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nfunction RatingStars(props) {\r\n  const stars = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    if (i % 2 === 0) {\r\n      if (i / 2 < props.starsFilled) {\r\n        stars.push(\r\n          <Icon\r\n            boxSize={props.starSize}\r\n            mr={-props.starSize}\r\n            color={'yellow.300'}\r\n            as={FaStarHalf}\r\n            key={i}\r\n          />\r\n        );\r\n      } else {\r\n        stars.push(\r\n          <Icon\r\n            key={i}\r\n            boxSize={props.starSize}\r\n            mr={-props.starSize}\r\n            as={FaStarHalf}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      if (i / 2 < props.starsFilled) {\r\n        stars.push(\r\n          <Icon\r\n            key={i}\r\n            transform=\"rotateY(180deg)\"\r\n            color={'yellow.300'}\r\n            as={FaStarHalf}\r\n            boxSize={props.starSize}\r\n          />\r\n        );\r\n      } else {\r\n        stars.push(\r\n          <Icon\r\n            key={i}\r\n            boxSize={props.starSize}\r\n            transform=\"rotateY(180deg)\"\r\n            as={FaStarHalf}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return stars;\r\n}\r\n\r\nexport default RatingStars;\r\n","import React, { Fragment } from 'react';\r\nimport { Box, Flex, Text, Progress, Tooltip } from '@chakra-ui/react';\r\nimport RatingStars from '../ui/RatingStars';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetBook, useGetPercentageRead } from '../../util/hooks';\r\n\r\nfunction BookCardFooter(props) {\r\n  const { pages, pagesRead, rating } = useGetBook(props.bookId);\r\n  const percentageRead = useGetPercentageRead(pages, pagesRead);\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  return (\r\n    <Box mx=\"2\">\r\n      {props.type === 'progress' ? (\r\n        <Fragment>\r\n          <Text fontSize=\"12\" align=\"right\">\r\n            {percentageRead}% read\r\n          </Text>\r\n          <Tooltip\r\n            placement=\"bottom\"\r\n            label={pagesRead + '/' + pages}\r\n            openDelay={250}\r\n            hasArrow\r\n            shouldWrapChildren\r\n          >\r\n            <Progress\r\n              value={percentageRead}\r\n              colorScheme={mainColor}\r\n              hasStripe\r\n              display=\"block\"\r\n              aria-label=\"progress bar\"\r\n            />\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Flex mt=\"1\">\r\n          <RatingStars starsFilled={rating} starSize=\"5\" />\r\n          <Text fontSize=\"14\" ml=\"1\">\r\n            {rating === 0 ? 'Unrated' : rating + '/5'}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BookCardFooter;\r\n","import React from 'react';\r\nimport { Flex } from '@chakra-ui/react';\r\nimport BookCardHeader from './BookCardHeader';\r\n\r\nimport BookCardInfo from './BookCardInfo';\r\n\r\nimport { useState } from 'react';\r\nimport BookCardFooter from './BookCardFooter';\r\n\r\nfunction BookCard(props) {\r\n  const [iconVisibility, setIconVisibility] = useState('hidden');\r\n\r\n  function setIconVisibilityTrue() {\r\n    setIconVisibility('visible');\r\n  }\r\n\r\n  function setIconVisibilityFalse() {\r\n    setIconVisibility('hidden');\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      flexDir=\"column\"\r\n      borderWidth=\"1px\"\r\n      pb=\"2\"\r\n      w=\"64\"\r\n      h=\"min-content\"\r\n      boxShadow=\"base\"\r\n      onMouseOver={setIconVisibilityTrue}\r\n      onMouseLeave={setIconVisibilityFalse}\r\n    >\r\n      <BookCardHeader\r\n        bookId={props.bookId}\r\n        iconVisibility={iconVisibility}\r\n        setIconVisibilityTrue={setIconVisibilityTrue}\r\n        setIconVisibilityFalse={setIconVisibilityFalse}\r\n      />\r\n      <BookCardInfo bookId={props.bookId} />\r\n      <BookCardFooter bookId={props.bookId} type={props.footerType} />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default BookCard;\r\n","import React from 'react';\r\nimport { Grid, GridItem } from '@chakra-ui/react';\r\nimport BookCard from '../book-card/BookCard';\r\n\r\nfunction BookGrid(props) {\r\n  return (\r\n    <Grid autoFlow=\"row\" templateColumns=\"repeat(2, 1fr)\" gap=\"3\">\r\n      {props.books.map(book => {\r\n        return (\r\n          <GridItem key={book.id}>\r\n            <BookCard bookId={book.id} footerType={props.footerType} />\r\n          </GridItem>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default BookGrid;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  TabPanel,\r\n  Tab,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport BookGrid from '../../components/books-display/BookGrid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sortBooks } from '../../features/books/booksSlice';\r\n\r\nfunction selectCompletedBooks(state) {\r\n  return selectBooks(state).filter(book => book.pagesRead === book.pages);\r\n}\r\n\r\nfunction selectCurrentlyReadingBooks(state) {\r\n  return selectBooks(state).filter(book => book.pagesRead !== book.pages);\r\n}\r\n\r\nfunction selectBooks(state) {\r\n  return state.books.filter.length === 0\r\n    ? state.books.booksArray\r\n    : state.books.booksArray.filter(book =>\r\n        book.genres.some(genre =>\r\n          state.books.filter.includes(state.genres.genreArray[genre])\r\n        )\r\n      );\r\n}\r\n\r\nfunction GridTabs() {\r\n  const allBooks = useSelector(selectBooks);\r\n\r\n  const completedBooks = useSelector(selectCompletedBooks);\r\n  const currentlyReadingBooks = useSelector(selectCurrentlyReadingBooks);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sortBy = useSelector(state => state.books.sortBy);\r\n  const sortByOrder = useSelector(state => state.books.sortByOrder);\r\n\r\n  useEffect(() => {\r\n    dispatch(sortBooks(sortBy));\r\n  }, [sortBy, sortByOrder, dispatch]);\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  return (\r\n    <Tabs isLazy colorScheme={mainColor} mt=\"2\">\r\n      <TabList mb=\"2\">\r\n        <Tab outlineOffset=\"-3\" _focus={{ outlineColor: 'blue.200' }}>\r\n          Currently reading\r\n        </Tab>\r\n        <Tab outlineOffset=\"-3\" _focus={{ outlineColor: 'blue.200' }}>\r\n          Finished\r\n        </Tab>\r\n        <Tab outlineOffset=\"-3\" _focus={{ outlineColor: 'blue.200' }}>\r\n          All\r\n        </Tab>\r\n      </TabList>\r\n      <TabPanels h=\"80vh\" overflowY=\"scroll\">\r\n        <TabPanel>\r\n          <BookGrid books={currentlyReadingBooks} footerType=\"progress\" />\r\n          {currentlyReadingBooks.length === 0 ? (\r\n            <Text textAlign=\"center\">\r\n              You aren't reading any book right now. Add a new one by clicking\r\n              \"New book\" above.\r\n            </Text>\r\n          ) : (\r\n            true\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <BookGrid books={completedBooks} footerType=\"rating\" />\r\n          {completedBooks.length === 0 ? (\r\n            <Text textAlign=\"center\">No finished books yet.</Text>\r\n          ) : (\r\n            true\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <BookGrid books={allBooks} footerType=\"progress\" />\r\n          {allBooks.length === 0 ? (\r\n            <Text textAlign=\"center\">\r\n              You have no books added! Start adding them by clicking \"New book\"\r\n              above.\r\n            </Text>\r\n          ) : (\r\n            true\r\n          )}\r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default GridTabs;\r\n","import React from 'react';\r\nimport { Box } from '@chakra-ui/react';\r\nimport BookGridActions from './BookGridActions';\r\nimport GridTabs from './GridTabs';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction BooksDisplay() {\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  return (\r\n    <Box w=\"xl\" mx=\"auto\" bg=\"white\">\r\n      <BookGridActions color={mainColor} />\r\n      <GridTabs />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BooksDisplay;\r\n","import React from 'react';\r\nimport { Tr, Td, Flex, Icon, Text, Box } from '@chakra-ui/react';\r\n\r\nfunction TableItem(props) {\r\n  return (\r\n    <Tr>\r\n      <Td>\r\n        <Flex alignItems=\"center\">\r\n          <Icon as={props.icon} mr=\"2\" color={props.iconColor} />\r\n          <Text letterSpacing=\"wider\" mr=\"4\" fontWeight=\"light\">\r\n            {props.label}\r\n          </Text>\r\n        </Flex>\r\n      </Td>\r\n      <Td>\r\n        <Box fontWeight=\"medium\">{props.data}</Box>\r\n      </Td>\r\n    </Tr>\r\n  );\r\n}\r\n\r\nexport default TableItem;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editBook } from '../../features/books/booksSlice';\r\nimport { useGetGenreArrayById } from '../../util/hooks';\r\nimport BookForm from './BookForm';\r\n\r\nfunction EditBookForm(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  function onSubmit(data) {\r\n    data.genreArray = Object.values(data.genreArray);\r\n    data.genreArray = data.genreArray.filter(genre => {\r\n      return genre !== false;\r\n    });\r\n\r\n    if (data.image === '')\r\n      data.image =\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbJk-qCpmshndFRatcLSOB8GsyboaySnGpeS2GvkZsQShaZpccKqkkK4MkBRGbIVOBnzw&usqp=CAU';\r\n\r\n    const editedBook = {\r\n      id: props.book.id,\r\n      title: data.title,\r\n      author: data.author,\r\n      imageSrc: data.image,\r\n      genres: data.genreArray,\r\n      pages: data.pages,\r\n      pagesRead: data.pagesRead,\r\n      rating: data.rating,\r\n    };\r\n\r\n    dispatch(editBook(editedBook));\r\n\r\n    props.toggleIsOpen();\r\n  }\r\n\r\n  const bookGenres = useGetGenreArrayById(props.book.id);\r\n\r\n  return (\r\n    <BookForm\r\n      book={props.book}\r\n      onSubmit={onSubmit}\r\n      bookGenres={bookGenres}\r\n      editMode\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditBookForm;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Flex, Box } from '@chakra-ui/layout';\r\nimport { useGetBook, useGetGenreArrayById } from '../../util/hooks';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Image,\r\n  Icon,\r\n  Table,\r\n  Tbody,\r\n  IconButton,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport {\r\n  FaTheaterMasks,\r\n  FaUser,\r\n  FaBookReader,\r\n  FaStar,\r\n  FaBook,\r\n  FaEdit,\r\n} from 'react-icons/fa';\r\nimport TableItem from './TableItem';\r\nimport RatingStars from '../ui/RatingStars';\r\nimport EditBookForm from '../forms/EditBookForm';\r\nimport BookModal from '../modals/BookModal';\r\n\r\nfunction BookPage() {\r\n  const { bookId } = useParams();\r\n  const book = useGetBook(bookId);\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  function stringifyGenres(genres) {\r\n    let str = '';\r\n\r\n    for (let i = 0; i < genres.length; i++) {\r\n      str += genres[i] + ', ';\r\n    }\r\n\r\n    return str.substr(0, str.length - 2);\r\n  }\r\n\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  const genreArray = useGetGenreArrayById(book.id);\r\n\r\n  return (\r\n    <Box bg={mainColor + '.50'}>\r\n      <Flex\r\n        w=\"container.md\"\r\n        h=\"100vh\"\r\n        px=\"6\"\r\n        mx=\"auto\"\r\n        shadow=\"lg\"\r\n        bg=\"white\"\r\n        direction=\"column\"\r\n      >\r\n        <IconButton\r\n          variant=\"ghost\"\r\n          ml=\"auto\"\r\n          mr=\"4\"\r\n          mt=\"1\"\r\n          w=\"8\"\r\n          colorScheme={mainColor}\r\n          size=\"md\"\r\n          icon={<Icon as={FaEdit} />}\r\n          onClick={onToggle}\r\n          aria-label=\"edit book\"\r\n        />\r\n        <BookModal header=\"Edit book\" isOpen={isOpen} toggleIsOpen={onToggle}>\r\n          <EditBookForm isOpen={isOpen} toggleIsOpen={onToggle} book={book} />\r\n        </BookModal>\r\n        <Flex alignItems=\"center\" justify=\"center\">\r\n          <Image\r\n            src={book.imageSrc}\r\n            w=\"60\"\r\n            h=\"80\"\r\n            shadow=\"base\"\r\n            alt=\"book cover\"\r\n          />\r\n          <Table w=\"2/5\" fontSize=\"18\" mt=\"2\">\r\n            <Tbody>\r\n              <TableItem\r\n                icon={FaBook}\r\n                label=\"title\"\r\n                data={book.title}\r\n                iconColor={mainColor + '.600'}\r\n              />\r\n              <TableItem\r\n                icon={FaUser}\r\n                label=\"author\"\r\n                data={book.author}\r\n                iconColor={mainColor + '.600'}\r\n              />\r\n              <TableItem\r\n                icon={FaTheaterMasks}\r\n                label=\"genres\"\r\n                data={stringifyGenres(genreArray)}\r\n                iconColor={mainColor + '.600'}\r\n              />\r\n\r\n              <TableItem\r\n                icon={FaBookReader}\r\n                label=\"pages read\"\r\n                data={book.pagesRead + ' / ' + book.pages}\r\n                iconColor={mainColor + '.600'}\r\n              />\r\n              {book.rating === 0 ? (\r\n                true\r\n              ) : (\r\n                <TableItem\r\n                  icon={FaStar}\r\n                  label=\"your rating\"\r\n                  data={<RatingStars starsFilled={book.rating} starSize={6} />}\r\n                  iconColor={mainColor + '.600'}\r\n                />\r\n              )}\r\n            </Tbody>\r\n          </Table>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BookPage;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const colorSlice = createSlice({\r\n  name: 'color',\r\n  initialState: 'pink',\r\n  reducers: {\r\n    changeColor: (state, action) => {\r\n      // state = action.payload; -> can't do this since the state is a primitive\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeColor } = colorSlice.actions;\r\n\r\nexport default colorSlice.reducer;\r\n","import React from 'react';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport {\r\n  Icon,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverArrow,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverCloseButton,\r\n  Button,\r\n  SimpleGrid,\r\n  Box,\r\n  GridItem,\r\n} from '@chakra-ui/react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeColor } from '../../../features/theme/colorSlice';\r\n\r\nconst colors = [\r\n  'pink',\r\n  'green',\r\n  'cyan',\r\n  'teal',\r\n  'blue',\r\n  'red',\r\n  'yellow',\r\n  'orange',\r\n  'purple',\r\n  'gray',\r\n];\r\n\r\nfunction ColorPopover() {\r\n  const dispatch = useDispatch();\r\n\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger>\r\n        <Button variant=\"unstyled\">App Color</Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent color=\"black\" bg=\"gray.50\">\r\n        <PopoverArrow />\r\n        <PopoverCloseButton />\r\n        <PopoverHeader>Change the app main color</PopoverHeader>\r\n        <PopoverBody>\r\n          <SimpleGrid columns={5} textAlign=\"center\">\r\n            {colors.map(color => {\r\n              return (\r\n                <GridItem key={color}>\r\n                  <Box\r\n                    as=\"button\"\r\n                    w=\"max-content\"\r\n                    p=\"1\"\r\n                    _focus={{\r\n                      outlineColor: 'blue.200',\r\n                    }}\r\n                    value={color}\r\n                    onClick={() => {\r\n                      dispatch(changeColor(color));\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      h=\"7\"\r\n                      w=\"7\"\r\n                      bg={color + '.300'}\r\n                      borderRadius=\"full\"\r\n                      borderWidth=\"thin\"\r\n                      borderColor={color + '.600'}\r\n                      _active={{ bg: color + '.600' }}\r\n                    >\r\n                      {color === mainColor ? (\r\n                        <Icon color={color + '.800'} as={FaCheck} />\r\n                      ) : (\r\n                        true\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                </GridItem>\r\n              );\r\n            })}\r\n          </SimpleGrid>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default ColorPopover;\r\n","import React from 'react';\r\nimport { Flex, Box } from '@chakra-ui/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport ColorPopover from './ColorPopover';\r\n\r\nfunction Navbar() {\r\n  const mainColor = useSelector(state => state.color);\r\n\r\n  return (\r\n    <nav>\r\n      <Flex\r\n        h=\"12\"\r\n        w=\"100%\"\r\n        bg={mainColor + '.600'}\r\n        color=\"white\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box fontSize=\"22\">\r\n          <RouterLink to=\"/react-library/\">React Library</RouterLink>\r\n        </Box>\r\n\r\n        <Flex alignItems=\"center\">\r\n          <Box>Language</Box>\r\n          <Box ml=\"6\">\r\n            <ColorPopover />\r\n          </Box>\r\n          <Box ml=\"6\">About</Box>\r\n        </Flex>\r\n      </Flex>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport theme from './theme';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport BooksDisplay from './components/books-display/BooksDisplay';\r\nimport BookPage from './components/book-page/BookPage';\r\nimport Navbar from './components/ui/nav/Navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/react-library/books/:bookId\">\r\n            <BookPage />\r\n          </Route>\r\n          <Route path=\"/react-library/\" exact>\r\n            <BooksDisplay />\r\n          </Route>\r\n          <Route path=\"*\">error 404</Route>\r\n        </Switch>\r\n      </Router>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const genresSlice = createSlice({\r\n  name: 'genres',\r\n  initialState: {\r\n    genreArray: [\r\n      'Drama',\r\n      'Comedy',\r\n      'Epic',\r\n      'Romance',\r\n      'Young Adult',\r\n      'Children',\r\n      'Nonfiction',\r\n      'Sci-fi',\r\n      'Biografy',\r\n      'Adventure',\r\n      'Horror',\r\n      'Mystery',\r\n      'Thriller',\r\n      'Self Help',\r\n      'History',\r\n      'Psychology',\r\n      'Dystopia',\r\n      'Art',\r\n      'Science',\r\n      'Suspense',\r\n      'Crime',\r\n      'Classic',\r\n    ].sort((genre1, genre2) => {\r\n      return genre1 < genre2 ? -1 : 1;\r\n    }),\r\n  },\r\n  reducers: {},\r\n});\r\n\r\n// export const {} = genresSlice.actions;\r\n\r\nexport default genresSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport booksReducer from '../features/books/booksSlice';\r\nimport colorReducer from '../features/theme/colorSlice';\r\nimport genresReducer from '../features/books/genresSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    books: booksReducer,\r\n    color: colorReducer,\r\n    genres: genresReducer,\r\n  },\r\n});\r\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}